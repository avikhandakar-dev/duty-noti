import prisma from "@/src/lib/prisma";
import cron from "node-cron";
import { redis } from "@/src/lib/redis";
import { BadRequestError } from "../errors";
import { sendPushNotificationsInBatches } from "../job/aiService";
import { chatCompletion } from "../lib/ai.utils";

const triggerCron = async () => {
  const lockKey = "NO_PORTFOLIO_CRON_LOCK";
  const lockAcquired = await redis.set(lockKey, "1", "EX", 300); // 5 minutes TTL
  if (!lockAcquired) {
    console.log("Job is already running! Skipping...");
    return;
  }
  try {
    const portfolios = await prisma.portfolio.findMany({
      select: {
        userId: true,
      },
    });
    const userIds = portfolios.map((portfolio) => portfolio.userId);
    const pushTokens = await prisma.pushNotificationToken.findMany({
      where: {
        userId: {
          notIn: userIds,
        },
      },
      select: {
        token: true,
      },
    });

    const tokens = pushTokens.map((token) => token.token);
    const titlePrompt = `
    Generate a short and engaging title for a notification in Bangla. The title must be under 50 characters and should encourage users to create a portfolio in the stock market. It should feel exciting, urgent, and motivational."

Example Titles (Bangla):
ЁЯУв ржмрж╛ржЬрж╛рж░ ржорж╛рждрж╛ржЪрзНржЫрзЗ рж╕ржмрж╛ржЗ, ржЖрж░ ржЖржкржирж┐?
ЁЯЪА рж╕ржмрж╛ржЗ ржПржЧрж┐рзЯрзЗ ржпрж╛ржЪрзНржЫрзЗ, ржЖржкржирж┐ ржкрж┐ржЫрж┐рзЯрзЗ ржерж╛ржХржмрзЗржи?
ЁЯУК ржЖржкржирж╛рж░ ржмрж┐ржирж┐рзЯрзЛржЧ ржпрж╛рждрзНрж░рж╛ рж╢рзБрж░рзБ рж╣рзЯржирж┐?
ЁЯФе ржорж╛рж░рзНржХрзЗржЯ ржЪрж▓рзЗ, ржЖржкржирж┐ ржкрзНрж░рж╕рзНрждрзБржд рждрзЛ?
ЁЯТб рж╕рзНржорж╛рж░рзНржЯ ржмрж┐ржирж┐рзЯрзЛржЧрзЗрж░ рж╢рзБрж░рзБ ржПржЦрж╛ржирзЗржЗ!
    `;

    const bodyPrompt = `
    Generate a short, fun, and engaging description in Bangla (under 100 characters) for a notification encouraging users to set up their portfolio in the stock market. The description should feel exciting, slightly playful, and action-driven to grab attention."

Example Descriptions (Bangla) (Under 100 Characters):
ЁЯУИ ржкрзЛрж░рзНржЯржлрзЛрж▓рж┐ржУ ржЫрж╛рзЬрж╛ рж╕рзНржЯржХ ржорж╛рж░рзНржХрзЗржЯрзЗ? ржЯрж┐ржХржЯржХ ржЫрж╛рзЬрж╛ ржЯрзНрж░рзЗржирзНржбрж┐ржВ ржпрзЗржоржи! ржПржЦржиржЗ рж╕рзЗржЯржЖржк ржХрж░рзБржи!

ЁЯЪА ржмрж╛ржЬрж╛рж░рзЗ рж╕ржмрж╛ржЗ ржжрзМрзЬрж╛ржЪрзНржЫрзЗ, ржЖржкржирж┐ ржжрж╛ржБрзЬрж┐рзЯрзЗ ржЖржЫрзЗржи? ржкрзЛрж░рзНржЯржлрзЛрж▓рж┐ржУ рж╕рзЗржЯржЖржк ржХрж░рзЗ рж░рзЗрж╕рзЗ ржпрзЛржЧ ржжрж┐ржи!

ЁЯФе ржПржХржЯрж╛ рж╕рзБржпрзЛржЧ рж╣рж╛рждржЫрж╛рзЬрж╛ ржорж╛ржирзЗржЗ рж▓рж╕! ржкрзЛрж░рзНржЯржлрзЛрж▓рж┐ржУ рждрзИрж░рж┐ ржХрж░рзЗ рж╕рзНржорж╛рж░рзНржЯ ржмрж┐ржирж┐рзЯрзЛржЧ рж╢рзБрж░рзБ ржХрж░рзБржи!

ЁЯУК рж╕рзНржЯржХ ржорж╛рж░рзНржХрзЗржЯ ржорж╛ржирзЗржЗ ржкрзНрж▓рзНржпрж╛ржирж┐ржВ! ржЖржкржирж╛рж░ ржкрзЛрж░рзНржЯржлрзЛрж▓рж┐ржУ ржЫрж╛рзЬрж╛ ржЗржиржнрзЗрж╕рзНржЯржорзЗржирзНржЯ ржЕрж╕ржорзНржкрзВрж░рзНржг!

ЁЯТб ржкрзНрж░рзЛ ржмрж┐ржирж┐рзЯрзЛржЧржХрж╛рж░рзАрж░рж╛ ржХрзА ржХрж░рзЗ? ржЖржЧрзЗ ржкрзЛрж░рзНржЯржлрзЛрж▓рж┐ржУ рж╕рзЗржЯржЖржк, рждрж╛рж░ржкрж░ рж╕рзНржорж╛рж░рзНржЯ ржЯрзНрж░рзЗржб! ржЖржкржирж┐?

    `;

    const title = await chatCompletion(titlePrompt);
    const body = await chatCompletion(bodyPrompt);

    await sendPushNotificationsInBatches(title || "", body || "", tokens);

    console.log(tokens);
  } catch (error) {
    console.error("Error in triggerCron:", error);
    throw new BadRequestError("Something went wrong!");
  } finally {
    await redis.del(lockKey);
  }
};

export function startNoPortfolioScheduler() {
  cron.schedule("0 11 * * *", triggerCron, {
    timezone: "Asia/Dhaka",
    // runOnInit: true,
  });
  console.log("No Portfolio scheduler is running...");
}
